{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,eAAMC,EAAMC,SAASC,cAAc,SAC7BC,EAAWF,SAASC,cAAc,yBAoCvC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACtBL,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGrBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAzCjCN,EAAKa,iBAAiB,UACtB,SAAoBC,GAClBX,EAAUY,aAAa,WAAY,IAClCD,EAAIE,iBAEP,IACIC,UAAUX,MAAAY,EAAKC,KAACA,EAAIC,OAACA,IACnBN,EAAIO,cAETH,EAAQI,OAAOJ,EAAMK,OACrBJ,EAAOG,OAAOH,EAAKI,OACnBH,EAASE,OAAOF,EAAOG,OAGxB,IAAM,IAAIC,EAAS,EAAIA,GAAUJ,EAASI,GAAW,EACnDpB,EAAcoB,EAAUN,GACnBO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,YAAW,KACT5B,EAAA6B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,GAC9DA,EAAM,IAEVuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,YAAW,KACT5B,EAAA6B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,GAC3DA,EAAM,IAEbY,GAASC,EACTnB,EAAK+B,QACL5B,EAAU6B,gBAAgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["const form= document.querySelector('.form');\nconst submitBtn=(document.querySelector('button[type=\"submit\"]'));\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nform.addEventListener(\"submit\" , FormSubmit);\nfunction FormSubmit(evt) {\n  submitBtn.setAttribute('disabled', '');\n   evt.preventDefault();\n  \nlet {\n    elements:{delay,step,amount },\n  } = evt.currentTarget;\n  \n delay = Number(delay.value);\n step = Number(step.value);\n amount = Number(amount.value);\n\n\nfor ( let position=1 ; position<=amount ; position +=1   ) {\n  createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n    form.reset();\n    submitBtn.removeAttribute('disabled')\n  }\n  \n}\n\n function createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n     if (shouldResolve) {\n       // Fulfill\n       resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n   });\n }\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","setAttribute","preventDefault","elements","delay1","step","amount","currentTarget","Number","value","position1","then","setTimeout","Notify","success","catch","failure","reset","removeAttribute"],"version":3,"file":"03-promises.8735be47.js.map"}