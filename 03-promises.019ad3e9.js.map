{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAAMC,EAAMC,SAASC,cAAc,SAC7BC,EAAWF,SAASC,cAAc,yBAoCvC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACvC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACtBL,EAEFI,EAAQ,CAAEN,WAAUC,UAGrBM,EAAO,CAAEP,WAAUC,S,IAzCzBN,EAAKa,iBAAiB,UACtB,SAAoBC,GAClBX,EAAUY,aAAa,WAAY,IAClCD,EAAIE,iBAEP,IAEuBC,EAAjBH,EAAII,cADNC,SAAUC,EAAKH,EAALX,MAAMe,EAAIJ,EAAJI,KAAKC,EAAML,EAANK,OAGxBF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAGxB,IAAM,IAAIC,EAAS,EAAIA,GAAUH,EAASG,GAAW,EACnDrB,EAAcqB,EAAUL,GACnBM,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACT9B,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GAC5DA,E,IAEJ0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACT9B,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GACzDA,E,IAEPc,GAASC,EACTrB,EAAKkC,QACL/B,EAAUgC,gBAAgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["const form= document.querySelector('.form');\nconst submitBtn=(document.querySelector('button[type=\"submit\"]'));\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nform.addEventListener(\"submit\" , FormSubmit);\nfunction FormSubmit(evt) {\n  submitBtn.setAttribute('disabled', '');\n   evt.preventDefault();\n  \nlet {\n    elements:{delay,step,amount },\n  } = evt.currentTarget;\n  \n delay = Number(delay.value);\n step = Number(step.value);\n amount = Number(amount.value);\n\n\nfor ( let position=1 ; position<=amount ; position +=1   ) {\n  createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n    form.reset();\n    submitBtn.removeAttribute('disabled')\n  }\n  \n}\n\n function createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n     if (shouldResolve) {\n       // Fulfill\n       resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n   });\n }\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","setAttribute","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","position1","then","param","setTimeout","Notify","success","concat","catch","failure","reset","removeAttribute"],"version":3,"file":"03-promises.019ad3e9.js.map"}